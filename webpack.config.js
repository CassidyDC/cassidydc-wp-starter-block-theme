// WordPress webpack config.
const defaultConfig = require( '@wordpress/scripts/config/webpack.config' );

// Plugins.
const RemoveEmptyScriptsPlugin = require( 'webpack-remove-empty-scripts' );
const CopyWebpackPlugin = require( 'copy-webpack-plugin' );

// Utilities.
const path = require( 'path' );
const globSync = require( 'glob' ).sync;

// Directories.
const sourceDir = './src/';

// Entry points.
const entriesObj = createEntriesObj();

// Minified files to copy.
const minFiles = globSync( `${ sourceDir }/**/*.min.js` );

// Creates entries object automatically from the source files.
function createEntriesObj() {
	const sourceFilePaths = globSync( `${ sourceDir }**/*.{js,css,sass,scss}`, {
		ignore: [ '**/modules/*.js', '**/*.min.js', '**/_*.{sass,scss}' ],
	} );
	const entries = {};

	sourceFilePaths.forEach( ( filePath ) => {
		const outputPath = path
			.relative( sourceDir, filePath ) // Gets the relative path without the sourceDir.
			.split( '.' )[ 0 ] // Removes the file extension.
			.replace( /(sass|scss)/, 'css' ); // Replaces sass/scss directories with css directories.
		const entryPath = path.resolve( process.cwd(), filePath );

		entries[ outputPath ] = entryPath;
	} );

	return entries;
}

module.exports = {
	...defaultConfig,
	...{
		entry: entriesObj,
		plugins: [
			// Include WP's plugin config.
			...defaultConfig.plugins,

			// Removes the empty `.js` files generated by webpack but
			// sets it after WP has generated its `*.asset.php` file.
			new RemoveEmptyScriptsPlugin( {
				stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS,
			} ),
			// Copy already minified JS files to the build directory without reprocessing them.
			...( minFiles.length > 0
				? [
						new CopyWebpackPlugin( {
							patterns: globSync( `${ sourceDir }/**/*.min.js` ).map( ( filePath ) => ( {
								from: filePath,
								to: path.join( path.relative( sourceDir, filePath ) ),
							} ) ),
						} ),
				  ]
				: [] ),
		],
	},
};
